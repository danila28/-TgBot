import asyncio
import config
import logging
from aiogram import Bot, types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton, ChatActions, ParseMode
import aiogram.utils.markdown as md
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext, Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils import executor

logging.basicConfig(format=u'%(filename)s [ LINE:%(lineno)+3s ]#%(levelname)+8s [%(asctime)s]  %(message)s',
                    level=logging.INFO)

bot = Bot(token=config.TOKEN)
base_url = config.BASE_URL
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

SOHO = 'AgACAgIAAxkBAAEFxk1fPXHvhAt9D14IrAS1HLCcYR4hmQACErAxG1aA6EllJDonIGgcqdteC5cuAAMBAAMCAAN5AAM_OgACGwQ'
DRINK = 'AgACAgIAAxkBAAEFxk1fPXHvhAt9D14IrAS1HLCcYR4hmQACErAxG1aA6EllJDonIGgcqdteC5cuAAMBAAMCAAN5AAM_OgACGwQ'
TEA = 'AgACAgIAAxkBAAEFxk1fPXHvhAt9D14IrAS1HLCcYR4hmQACErAxG1aA6EllJDonIGgcqdteC5cuAAMBAAMCAAN5AAM_OgACGwQ'
FOOD = 'AgACAgIAAxkBAAEFxk1fPXHvhAt9D14IrAS1HLCcYR4hmQACErAxG1aA6EllJDonIGgcqdteC5cuAAMBAAMCAAN5AAM_OgACGwQ'
VIDEO_STOCKS = 'BAACAgIAAxkBAAEFxjJfPWcAAXNMPn35cwlm4oNGL4bluoYAAn4MAAJn_vBJG9n8U7HsiocbBA'


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button_hi = KeyboardButton('–ü—Ä–∏–≤–µ—Ç! üëã')
    greet_kb.add(button_hi)
    await bot.send_message(message.chat.id,
                           text=md.bold(
                               f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}, —è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∂–µ—Ç, –Ω–∞ —á—Ç–æ –æ–Ω —Å–ø–æ—Å–æ–±–µ–Ωüòâ\n"
                               "–ü—Ä–∏–º–µ—Ä –æ—Ñ–æ—Ä–º–ª–µ–Ω –ø–æ–¥ –∫–∞–ª—å—è–Ω–Ω—É—é"), reply_markup=greet_kb, parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(commands=['about'])
async def send_about(message: types.Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    itembtn4 = KeyboardButton('üåê–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüåê')
    markup.add(itembtn4)
    await bot.send_message(
        message.chat.id,
        text=md.bold("–ß—Ç–æ –º–æ–∂–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç:\n1‚É£–≠—Ç–æ—Ç –±–æ—Ç –º–æ–∂–µ—Ç —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ –≤–∞—à–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏, —Å–∞–π—Ç–µ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–µ\n"
                     "2‚É£–ü–æ–º–æ–≥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤—ã–±–æ—Ä–æ–º –±–µ–∑ –∫–∞–∫–æ–≥–æ –ª—é–±–æ —É—á–∞—Å—Ç–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞\n"
                     "3‚É£–î–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç—É –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ç—É –∏–ª–∏ –∏–Ω—É—é —É—Å–ª–≥—É‚úè."),
        reply_markup=markup, parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(commands=['menu'])
async def process_menu_command(message: types.Message):
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button_soho = KeyboardButton('/–ö–∞–ª—å—è–Ω—ãüí®')
    button_drink = KeyboardButton('/–ù–∞–ø–∏—Ç–∫–∏üçπ')
    button_tea = KeyboardButton('/–ß–∞–∏‚òï')
    button_food = KeyboardButton('/–ó–∞–∫—É—Å–∫–∏üç§')
    button_menu = KeyboardButton('üåê–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüåê')
    greet_kb.add(button_soho, button_drink, button_tea, button_food, button_menu)
    await bot.send_message(message.chat.id, text=md.bold("–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å"), reply_markup=greet_kb,
                           parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(commands=['–ö–∞–ª—å—è–Ω—ãüí®'])
async def process_soho(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(1)
    await bot.send_photo(message.from_user.id, SOHO,
                         reply_to_message_id=message.message_id)


@dp.message_handler(commands=['–ù–∞–ø–∏—Ç–∫–∏üçπ'])
async def process_drink(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(1)
    await bot.send_photo(message.from_user.id, DRINK,
                         reply_to_message_id=message.message_id)


@dp.message_handler(commands=['–ß–∞–∏‚òï'])
async def process_tea(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(1)
    await bot.send_photo(message.from_user.id, TEA,
                         reply_to_message_id=message.message_id)


@dp.message_handler(commands=['–ó–∞–∫—É—Å–∫–∏üç§'])
async def process_food(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_PHOTO)
    await asyncio.sleep(1)
    await bot.send_photo(message.from_user.id, FOOD,
                         reply_to_message_id=message.message_id)


@dp.message_handler(commands=['stocks'])
async def process_stocks(message: types.Message):
    user_id = message.from_user.id
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button_menu = KeyboardButton('üåê–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüåê')
    greet_kb.add(button_menu)
    await bot.send_message(message.chat.id, text=md.bold("–í–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ –≤–∞—à–µ–π –∞–∫—Ü–∏–∏ –∞–∫—Ü–∏–∏üìπ"), reply_markup=greet_kb,
                           parse_mode=ParseMode.MARKDOWN)
    await bot.send_chat_action(user_id, ChatActions.RECORD_VIDEO)
    await asyncio.sleep(0)  # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤–∏–¥–µ–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.send_video(message.from_user.id, VIDEO_STOCKS)


@dp.message_handler(commands=['contact'])
async def process_contact(message: types.Message):
    keyboards = InlineKeyboardMarkup(row_width=2, one_time_keyboard=True)
    btn1 = InlineKeyboardButton(text='–í–∫–æ–Ω—Ç–∞–∫—Ç–µ', url='https://vk.com/')
    btn2 = InlineKeyboardButton(text='–ò–Ω—Å—Ç–∞–≥—Ä–∞–º', url='https://www.instagram.com/')
    keyboards.add(btn1, btn2)
    await bot.send_message(message.chat.id, md.italic('–ö–∞–∫ —Å –Ω–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—èüì≤\n'
                                                      '–ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: +7911888888üìû\n'
                                                      '–ù–∞—à –∞–¥—Ä–µ—Å—Å: —É–ª.–î–æ—Å—Ç–æ–µ–≤—Å–∫–æ–≥, –¥.15, –æ—Ñ.48üè¢'),
                           reply_markup=keyboards, parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(commands=['comment'])
async def process_comment(message: types.Message):
    user_id = message.from_user.id
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button_menu = KeyboardButton('üåê–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüåê')
    greet_kb.add(button_menu)
    await bot.send_message(message.chat.id, text=md.bold("–í–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ –≤–∞—à–∏—Ö –æ—Ç–∑—ã–≤–æ–≤üìπ"), reply_markup=greet_kb,
                           parse_mode=ParseMode.MARKDOWN)
    await bot.send_chat_action(user_id, ChatActions.RECORD_VIDEO)
    await asyncio.sleep(0)  # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤–∏–¥–µ–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.send_video(message.from_user.id, VIDEO_STOCKS)


@dp.message_handler(commands=['help'])
async def process_help(message: types.Message):
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2, one_time_keyboard=True)
    button_about = KeyboardButton('/about')
    button_menu = KeyboardButton('/menu')
    button_stocks = KeyboardButton('/stocks')
    button_reg = KeyboardButton('/reg')
    button_contact = KeyboardButton('/contact')
    button_comment = KeyboardButton('/comment')
    greet_kb.add(button_about, button_stocks, button_reg, button_menu, button_contact, button_comment)
    await bot.send_message(message.chat.id,
                           text=md.italic("–í—Å–µ –¥–æ–≤–æ–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ, –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∫–∞–∑–∞—ã –Ω–∏–∂–µ\n"
                                          "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å –≤—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /about\n"
                                          "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à–µ –º–µ–Ω—é –≤—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /menu\n"
                                          "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –≤—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /reg\n"
                                          "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã  –≤—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /contact\n"
                                          "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã –æ –Ω–∞—Å –≤–µ–¥–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /comment\n"),
                           reply_markup=greet_kb, parse_mode=ParseMode.MARKDOWN)


#
# @dp.callback_query_handler(func=lambda call: True)
# async def keyboard_regulate3(call):
#    if call.data == 'CALLBACK_BAD':
#        keyboard1 = InlineKeyboardMarkup()
#        btn2 = InlineKeyboardButton(
#            text='lox',
#            callback_data='CALLBACK_BAD')
#        keyboard1.add(btn2)
#        await bot.edit_message_text(
#            chat_id=call.message.chat.id,
#            message_id=call.message.message_id,
#            text='palace',
#            reply_markup=keyboard1)
#    elif call.data == 'CALLBACK_AMAZING':
#        keyboard1 = InlineKeyboardMarkup()
#        btn2 = InlineKeyboardButton(text='–ú–æ—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', url='https://vk.com/filimonov280101')
#        keyboard1.add(btn2)
#        await bot.edit_message_text(
#            chat_id=call.message.chat.id,
#            message_id=call.message.message_id,
#            text='lumia',
#            reply_markup=keyboard1)
#
#    elif call.data == 'CALLBACK_FORWARD':
#        keyboards = InlineKeyboardMarkup(row_width=2)
#        btn1 = InlineKeyboardButton(text='–ú–æ—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', callback_data='CALLBACK_AMAZING')
#        btn2 = InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å –∞–≤—Ç–æ—Ä—É', callback_data='CALLBACK_BAD')
#        btn3 = InlineKeyboardButton(text='–ú–µ–Ω—é', url='https://vk.com/filimonov280101')
#        keyboards.add(btn1, btn2, btn3)
#
#        await bot.edit_message_text(
#            chat_id=call.message.chat.id,
#            message_id=call.message.message_id,
#            text='menu',
#            reply_markup=keyboards)
#


class Form(StatesGroup):
    name = State()
    age = State()
    city = State()
    phone = State()
    service = State()
    strength = State()
    date = State()


@dp.message_handler(commands='reg')
async def cmd_start(message: types.Message):
    await Form.name.set()
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button_cancel = ('/–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')
    greet_kb.add(button_cancel)
    await bot.send_message(message.chat.id, md.italic(
        "–ï—Å–ª–∏ –≤—ã –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å –Ω–∞—à–∏–º –º–µ–Ω—é, —Ç–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µüìù\n"
        "–ß—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è, –≤–≤–æ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏, —Å–ø–∞—Å–∏–±–æüòä\n"
        "–ï—Å–ª–∏ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ —Ç–µ –¥–∞–Ω–Ω—ã–µ, –Ω–∞–∂–º–∏—Ç–µ –û—Ç–º–µ–Ω–∏—Ç—å‚ùå\n"
        "1‚É£–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –∏–Ω–∏—Ü–∏–∞–ª—ã(–§–ò–û)"), reply_markup=greet_kb,
                           parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(state='*', commands='–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')
@dp.message_handler(Text(equals='–û—Ç–º–µ–Ω–∏—Ç—å‚ùå', ignore_case=True), state='*')
async def cancel_handler(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return

    logging.info('Cancelling state %r', current_state)
    await state.finish()
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button_menu = KeyboardButton('üåê–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüåê')
    greet_kb.add(button_menu)
    await bot.send_message(message.chat.id, text="–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=greet_kb)


@dp.message_handler(state=Form.name)
async def process_name(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text

    await Form.next()
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button_cancel = ('/–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')
    greet_kb.add(button_cancel)
    await bot.send_message(message.chat.id, md.italic(f"2‚É£–û—Ç–ª–∏—á–Ω–æ, {message.from_user.first_name}\n"
                                                      "–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?üîû"), reply_markup=greet_kb,
                           parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(lambda message: not message.text.isdigit(), state=Form.age)
async def process_age_invalid(message: types.Message):
    return await bot.send_message(message.chat.id, "–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.\n–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?üîû (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞)")


@dp.message_handler(lambda message: message.text.isdigit(), state=Form.age)
async def process_age(message: types.Message, state: FSMContext):
    await Form.next()
    await state.update_data(age=int(message.text))

    await bot.send_message(message.chat.id, md.italic("3‚É£–ò–∑ –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?üè≠"), parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(state=Form.city)
async def process_city(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['city'] = message.text

    await Form.next()
    await bot.send_message(message.chat.id, md.italic("4‚É£–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞üì±"), parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(lambda message: not message.text.isdigit(), state=Form.phone)
async def process_phone_invalid(message: types.Message):
    return await bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.\n–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ωüì±(—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞)")


@dp.message_handler(lambda message: message.text.isdigit(), state=Form.phone)
async def process_phone(message: types.Message, state: FSMContext):
    await Form.next()
    await state.update_data(phone=int(message.text))

    await bot.send_message(message.chat.id, md.italic("5‚É£–ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ–±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–∫–∞–∑—Ç—å –∏–∑ –º–µ–Ω—éüìò"),
                           parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(state=Form.service)
async def process_service(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['service'] = message.text

    await Form.next()
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3, one_time_keyboard=True)
    button_soft = KeyboardButton('–ú—è–≥–∫–∏–π')
    button_medium = KeyboardButton('–°—Ä–µ–¥–Ω–∏–π')
    button_hard = KeyboardButton('–ñ–µ—Å–∫–∏–π')
    button_cancel = KeyboardButton('/–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')
    greet_kb.add(button_soft, button_medium, button_hard, button_cancel)
    await bot.send_message(message.chat.id, text="6‚É£–ö–∞–∫–æ–π –∫—Ä–µ–ø–æ—Å—Ç–∏ –∫–∞–ª—å—è–Ω –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏?üí®", reply_markup=greet_kb,
                           parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(state=Form.strength)
async def process_strength(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['strength'] = message.text

    await Form.next()
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
    button_cancel = ('/–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')
    button_not = ('–ù–µ—Ç')
    greet_kb.add(button_cancel, button_not)
    await bot.send_message(message.chat.id, md.text(md.italic("7‚É£–í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª?‚åö\n"),
                                                    "–ï—Å–ª–∏ –¥–∞ —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –¥–∞—Ç—É, –Ω–∞–ø—Ä–∏–º–µ—Ä 14.06.20 –≤ 14:00"),
                           reply_markup=greet_kb,
                           parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(state=Form.date)
async def process_gender(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        chat_id = message.chat.id
        data['date'] = message.text
        markup = ReplyKeyboardRemove()
    await bot.send_message(chat_id, md.text(
        md.text('–í–∞—à–∞ –∑–∞—è–≤–∫–∞:', md.bold(message.from_user.first_name)),
        md.text('–í–∞—à–∏ –∏–Ω–∏—Ü–∏–∞–ª—ã:', md.bold(data['name'])),
        md.text('–í–æ–∑—Ä–∞—Å—Ç:', md.bold(data['age'])),
        md.text('–ì–æ—Ä–æ–¥:', md.bold(data['city'])),
        md.text('–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω', md.bold(data['phone'])),
        md.text('–í–∞—à –∑–∞–∫–∞–∑:', md.bold(data['service'])),
        md.text('–ö—Ä–µ–ø–æ—Å—Ç—å –∫–∞–ª—å—è–Ω–∞:', md.bold(data['strength'])),
        md.text('–î–∞—Ç–∞:', md.bold(data['date'])),
        sep='\n',
    ),
                           reply_markup=markup,
                           parse_mode=ParseMode.MARKDOWN,

                           )
    await bot.send_message(config.chat_id, md.text(
        md.text('–ó–∞—è–≤–∫–∞ –æ—Ç:', md.bold(message.from_user.first_name)),
        md.text('–ò–Ω–∏—Ü–∏–∞–ª—ã:', md.bold(data['name'])),
        md.text('–í–æ–∑—Ä–∞—Å—Ç:', md.bold(data['age'])),
        md.text('–ì–æ—Ä–æ–¥:', md.bold(data['city'])),
        md.text('–¢–µ–ª–µ—Ñ–æ–Ω:', md.bold(data['phone'])),
        md.text('–ó–∞–∫–∞–∑ –∫–ª–∏–µ–Ω—Ç–∞:', md.bold(data['service'])),
        md.text('–ö—Ä–µ–ø–æ—Å—Ç—å –∫–∞–ª—å—è–Ω–∞:', md.bold(data['strength'])),
        md.text('–î–∞—Ç–∞:', md.bold(data['date'])),
        sep='\n',
    ),
                           reply_markup=markup,
                           parse_mode=ParseMode.MARKDOWN,
                           )
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button_menu = KeyboardButton('üåê–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüåê')
    greet_kb.add(button_menu)
    await bot.send_message(message.chat.id,
                           text="–í–∞—à–∞ –∑–∞—è–≤–∫–∞üìù —É–∂–µ –ø—Ä–∏—à–ª–∞ –∫ –Ω–∞–º, –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –º—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—èüòä",
                           reply_markup=greet_kb)
    await state.finish()


@dp.message_handler(content_types=["üåê–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüåê"])
async def send_help(message: types.Message):
    await bot.send_message(message.chat.id, md.bold(
        '–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å–ø—Ä–∞–≤–∞üëá\n–°—Ç–∞—Ä—ÇüöÄ - /start\n–û –Ω–∞—Åüìñ - /about\n–ú–µ–Ω—éüìò - /menu\n–ê–∫—Ü–∏–∏‚Äº - /stocks\n'
        '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑‚úè - /reg\n–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ãüì± - /contact\n–û—Ç–∑—ã–≤—ãüëç - /comment\n–ü–æ–º–æ—â—åüöë - /help'),
                           parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(content_types=["text"])
async def send_help(message: types.Message):
    await bot.send_message(message.chat.id, md.bold(
        '–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å–ø—Ä–∞–≤–∞üëá\n–°—Ç–∞—Ä—ÇüöÄ - /start\n–û –Ω–∞—Åüìñ - /about\n–ú–µ–Ω—éüìò - /menu\n–ê–∫—Ü–∏–∏‚Äº - /stocks\n'
        '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑‚úè - /reg\n–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ãüì± - /contact\n–û—Ç–∑—ã–≤—ãüëç - /comment\n–ü–æ–º–æ—â—åüöë - /help'),
                           parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(content_types=["photo"])
def send_photo_text(message):
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —á–µ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ —Ñ–æ—Ç–æ!')


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
